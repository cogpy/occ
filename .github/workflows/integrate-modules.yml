name: Integrate All Components

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Build, Test, and Upload Artifacts for All Components
  build_and_upload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [
          "agents", "agi-bio", "asmoses", "atomspace-agents", "atomspace-bridge",
          "atomspace-cog", "atomspace-dht", "atomspace-explorer", "atomspace-ipfs",
          "atomspace-js", "atomspace-metta", "atomspace-restful", "atomspace-rocks",
          "atomspace-rpc", "atomspace-typescript", "atomspace-websockets", "atomspace",
          "attention", "benchmark", "blender_api", "blender_api_msgs", "cheminformatics",
          "cogprotolab", "cogserver", "cogutil", "destin", "dimensional-embedding",
          "distributional-value", "docker", "external-tools", "generate", "ghost_bridge",
          "guile-dbi", "language-learning", "learn", "lg-atomese", "link-grammar-website",
          "link-grammar", "linkgrammar-relex-web", "logicmoo_cogserver", "loving-ai-ghost",
          "loving-ai", "miner", "moses", "ocpkg", "opencog-cycl", "opencog-debian",
          "opencog-neo4j", "opencog-nix", "opencog-to-minecraft", "opencog.org",
          "opencog", "opencog_rpi", "pattern-index", "pau2motors", "perception",
          "pi_vision", "pln-brca-xp", "pln", "profile", "python-attic", "python-client",
          "python-destin", "relex", "rest-api-documentation", "robots_config", "rocca",
          "ros-behavior-scripting", "ros_opencog_robot_embodiment", "semantic-vision",
          "sensory", "spacetime", "src", "stochastic-language-generation", "test-datasets",
          "tv-toolbox", "unify", "unity3d-opencog-game", "ure", "vision", "visualization"
        ]
    steps:
      - name: Checkout code for ${{ matrix.component }}
        uses: actions/checkout@v2
        with:
          path: ${{ matrix.component }}

      - name: Build ${{ matrix.component }}
        run: |
          cd ${{ matrix.component }}
          # Add specific build commands for each component
          make build || npm install || ./configure && make || echo "Build command not specified"

      - name: Test ${{ matrix.component }}
        run: |
          cd ${{ matrix.component }}
          # Add specific test commands if available
          make test || npm test || echo "No tests available for this component"

      - name: Upload ${{ matrix.component }} Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.component }}-artifact
          path: ${{ matrix.component }}/build  # Ensure this path matches the actual output directory

  # Integration Job
  integrate:
    runs-on: ubuntu-latest
    needs: build_and_upload
    steps:
      - name: Checkout repository for integration
        uses: actions/checkout@v2

      - name: Download all component artifacts
        uses: actions/download-artifact@v4
        with:
          path: integrated_output

      - name: Integrate All Components
        run: |
          mkdir -p final_output
          cp -r integrated_output/* final_output/
          # Additional integration steps, e.g., merging files or creating an archive

      - name: Upload Final Integrated Artifact
        uses: actions/upload-artifact@v4
        with:
          name: integrated-final
          path: final_output
