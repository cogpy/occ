name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check for Xcode Project
        id: check_xcode
        run: |
          workspace=$(ls -A | grep -i '\.xcworkspace$' | head -1 | awk '{$1=$1;print}')
          project=$(ls -A | grep -i '\.xcodeproj$' | head -1 | awk '{$1=$1;print}')
          
          if [ -n "$workspace" ]; then
            echo "has_xcode_project=true" >> $GITHUB_OUTPUT
            echo "filetype_parameter=workspace" >> $GITHUB_OUTPUT
            echo "file_to_build=$workspace" >> $GITHUB_OUTPUT
            echo "Xcode workspace found: $workspace"
          elif [ -n "$project" ]; then
            echo "has_xcode_project=true" >> $GITHUB_OUTPUT
            echo "filetype_parameter=project" >> $GITHUB_OUTPUT
            echo "file_to_build=$project" >> $GITHUB_OUTPUT
            echo "Xcode project found: $project"
          else
            echo "has_xcode_project=false" >> $GITHUB_OUTPUT
            echo "No Xcode project found - skipping build"
          fi
      - name: Set Default Scheme
        if: steps.check_xcode.outputs.has_xcode_project == 'true'
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        if: steps.check_xcode.outputs.has_xcode_project == 'true'
        env:
          scheme: ${{ 'default' }}
          filetype_parameter: ${{ steps.check_xcode.outputs.filetype_parameter }}
          file_to_build: ${{ steps.check_xcode.outputs.file_to_build }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
